/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import models.Computer;
import models.Operator;

/**
 *
 * @author novil
 */
public class OperatorPanel extends javax.swing.JPanel {
    
    private int indexRowSelected;

    /**
     * Creates new form Operator
     */
    public OperatorPanel(int operatorId) {
        initComponents();
        
        Operator.currentOperatorId = operatorId;
        
        OperatorPanel self = this;
        getTableSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                self.indexRowSelected = operatorsTable.getSelectedRow();
                if (!e.getValueIsAdjusting() && self.indexRowSelected >= 0) { // This line prevents double events
                    setToEditMode();
                }
            }
        });
        
        fetchOperatorsData();
    }
    
    public void fetchOperatorsData() {
        DefaultTableModel model = (DefaultTableModel) operatorsTable.getModel();
        model.setRowCount(0);
        for (Operator operator : Operator.get()) {
            model.addRow(new Object[] { operator.getId(), operator.getUsername(), operator.getRegisteredDate() });
        }
        setToCreateMode();
    }
    
    public ListSelectionModel getTableSelectionModel() {
        return operatorsTable.getSelectionModel();
    }
    
    public int getSelectedId() {
        return Integer.parseInt(operatorsTable.getValueAt(indexRowSelected, 0).toString());
    }
    
    public String getSelectedUsername() {
        return operatorsTable.getValueAt(indexRowSelected, 1).toString();
    }
    
    public void setToCreateMode() {
        this.indexRowSelected = -1;
        usernameTextField.setText("");
        passwordTextField.setText("");
        addOperatorButton.setText("Tambah");
        getTableSelectionModel().clearSelection();
    }
    
    public void setToEditMode() {
        usernameTextField.setText(getSelectedUsername());
        addOperatorButton.setText("Edit");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameTextField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        operatorsTable = new javax.swing.JTable();
        operatorUsernameLabel = new javax.swing.JLabel();
        addOperatorButton = new javax.swing.JButton();
        deleteOperatorButton = new javax.swing.JButton();
        operatorPasswordLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        clearSelectionButton = new javax.swing.JButton();

        operatorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "No", "Username", "Tanggal"
            }
        ));
        jScrollPane3.setViewportView(operatorsTable);

        operatorUsernameLabel.setText("Username");

        addOperatorButton.setText("Tambah");
        addOperatorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOperatorButtonActionPerformed(evt);
            }
        });

        deleteOperatorButton.setText("Hapus");
        deleteOperatorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOperatorButtonActionPerformed(evt);
            }
        });

        operatorPasswordLabel.setText("Password");

        clearSelectionButton.setText("Lepas Pilihan");
        clearSelectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSelectionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(operatorUsernameLabel)
                            .addComponent(operatorPasswordLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearSelectionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteOperatorButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addOperatorButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(operatorUsernameLabel)
                            .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(operatorPasswordLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteOperatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addOperatorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addOperatorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOperatorButtonActionPerformed
        String username = usernameTextField.getText();
        String password = passwordTextField.getText();
        Operator operator = new Operator();
        
        if (username.isBlank()) {
            JOptionPane.showMessageDialog(null, "Nama Operator belum diisi");
            return;
        }
        
        // create
        if (indexRowSelected < 0) {
            if (password.isBlank()) {
                JOptionPane.showMessageDialog(null, "Password Operator belum diisi");
                return;
            }

            if (password.length() < 5) {
                JOptionPane.showMessageDialog(null, "Password minimal harus berisi 5 karakter");
                return;
            }
            
            operator.setUsername(username);
            operator.setPassword(password);

            if (operator.create()) {
                JOptionPane.showMessageDialog(null, "Operator berhasil ditambahkan");
            } else {
                JOptionPane.showMessageDialog(null, "Operator gagal ditambahkan");
            }
        // update
        } else {
            operator.setId(getSelectedId());
            operator.setUsername(username);
            
            if (!password.isBlank()) {
                if (password.length() >= 5) {
                    operator.setPassword(password);
                } else {
                    JOptionPane.showMessageDialog(null, "Password minimal harus berisi 5 karakter");
                    return;
                }
            }
            
            if (operator.update()) {
                JOptionPane.showMessageDialog(null, "Operator berhasil diedit");
            } else {
                JOptionPane.showMessageDialog(null, "Operator gagal diedit");
            }
        }
        
        fetchOperatorsData();
    }//GEN-LAST:event_addOperatorButtonActionPerformed

    private void deleteOperatorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOperatorButtonActionPerformed
        if (indexRowSelected < 0) {
            JOptionPane.showMessageDialog(null, "Mohon pilih data yang ingin dihapus");
            return;
        }
        
        String confirmMessage = String.format("Apakah anda yakin ingin menghapus data \"%s\"?", getSelectedUsername());
        if (JOptionPane.showConfirmDialog(null, confirmMessage) == JOptionPane.OK_OPTION) {
            Operator operator = new Operator();
            operator.setId(getSelectedId());

            if (operator.delete()) {
                JOptionPane.showMessageDialog(null, "Operator berhasil dihapus");
            } else {
                JOptionPane.showMessageDialog(null, "Operator gagal dihapus");
            }

            fetchOperatorsData();
        }
    }//GEN-LAST:event_deleteOperatorButtonActionPerformed

    private void clearSelectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSelectionButtonActionPerformed
        getTableSelectionModel().clearSelection();
        setToCreateMode();
    }//GEN-LAST:event_clearSelectionButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOperatorButton;
    private javax.swing.JButton clearSelectionButton;
    private javax.swing.JButton deleteOperatorButton;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel operatorPasswordLabel;
    private javax.swing.JLabel operatorUsernameLabel;
    private javax.swing.JTable operatorsTable;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
